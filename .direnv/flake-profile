{
  "bashFunctions": {
    "runHook":" \n    eval \"$shellHook\";\n    unset runHook\n"
  },
  "variables": {
    "BASH": {"type": "var", "value": "/noshell"},
    "BASHOPTS": {"type": "unknown"},
    "BASHPID": {"type": "unknown"},
    "HOME": {"type": "exported", "value": "/homeless-shelter"},
    "HOSTTYPE": {"type": "var", "value": "x86_64"},
    "IFS": {"type": "var", "value": " \t\n"},
    "IN_NIX_SHELL": {"type": "exported", "value": "impure"},
    "LINENO": {"type": "var", "value": "76"},
    "MACHTYPE": {"type": "var", "value": "x86_64-pc-linux-gnu"},
    "NIX_BUILD_CORES": {"type": "exported", "value": "12"},
    "NIX_BUILD_TOP": {"type": "exported", "value": "/build"},
    "NIX_LOG_FD": {"type": "exported", "value": "2"},
    "NIX_STORE": {"type": "exported", "value": "/nix/store"},
    "OLDPWD": {"type": "exported", "value": ""},
    "OPTERR": {"type": "var", "value": "1"},
    "OPTIND": {"type": "unknown"},
    "OSTYPE": {"type": "var", "value": "linux-gnu"},
    "PATH": {"type": "exported", "value": "/path-not-set"},
    "PS4": {"type": "var", "value": "+ "},
    "SHELL": {"type": "var", "value": "/noshell"},
    "SHELLOPTS": {"type": "unknown"},
    "SRANDOM": {"type": "unknown"},
    "TEMP": {"type": "exported", "value": "/build"},
    "TEMPDIR": {"type": "exported", "value": "/build"},
    "TERM": {"type": "exported", "value": "xterm-256color"},
    "TMP": {"type": "exported", "value": "/build"},
    "TMPDIR": {"type": "exported", "value": "/build"},
    "builder": {"type": "exported", "value": "/nix/store/5q96kfjc8bxwv89fw0fqczwr6083ny8n-bash-interactive-5.2-p15/bin/bash"},
    "dontAddDisableDepTrack": {"type": "exported", "value": "1"},
    "name": {"type": "exported", "value": "devenv-shell-env"},
    "out": {"type": "exported", "value": "/nix/store/jipvyl4xlzyj05zm1n1m3ddfjpr7sgaf-devenv-shell-env"},
    "outputs": {"type": "var", "value": "out"},
    "shellHook": {"type": "exported", "value": "\n# Remove all the unnecessary noise that is set by the build env\nunset NIX_BUILD_TOP NIX_BUILD_CORES NIX_STORE\nunset TEMP TEMPDIR TMP TMPDIR\n# $name variable is preserved to keep it compatible with pure shell https://github.com/sindresorhus/pure/blob/47c0c881f0e7cfdb5eaccd335f52ad17b897c060/pure.zsh#L235\nunset builder out shellHook stdenv system\n# Flakes stuff\nunset dontAddDisableDepTrack outputs\n\n# For `nix develop`. We get /noshell on Linux and /sbin/nologin on macOS.\nif [[ \"$SHELL\" == \"/noshell\" || \"$SHELL\" == \"/sbin/nologin\" ]]; then\n  export SHELL=/nix/store/5q96kfjc8bxwv89fw0fqczwr6083ny8n-bash-interactive-5.2-p15/bin/bash\nfi\n\n# https://github.com/numtide/devshell/issues/158\nPATH=${PATH#/path-not-set:}\n\nexport DEVENV_PROFILE=/nix/store/w85iqiki8r7pm96n9wfpm2kzni9binb7-devenv-profile\n\n# add installed packages to PATH\nexport PATH=\"$DEVENV_PROFILE/bin:$PATH\"\n\n# prepend common compilation lookup paths\nexport PKG_CONFIG_PATH=\"$DEVENV_PROFILE/lib/pkgconfig:${PKG_CONFIG_PATH-}\"\nexport LD_LIBRARY_PATH=\"$DEVENV_PROFILE/lib:${LD_LIBRARY_PATH-}\"\nexport LIBRARY_PATH=\"$DEVENV_PROFILE/lib:${LIBRARY_PATH-}\"\nexport C_INCLUDE_PATH=\"$DEVENV_PROFILE/include:${C_INCLUDE_PATH-}\"\n\n# these provide shell completions / default config options\nexport XDG_DATA_DIRS=\"$DEVENV_PROFILE/share:${XDG_DATA_DIRS-}\"\nexport XDG_CONFIG_DIRS=\"$DEVENV_PROFILE/etc/xdg:${XDG_CONFIG_DIRS-}\"\n\nexport DEVENV_DOTFILE='/root/prj/td/.devenv'\nexport DEVENV_PROFILE='/nix/store/w85iqiki8r7pm96n9wfpm2kzni9binb7-devenv-profile'\nexport DEVENV_ROOT='/root/prj/td'\nexport DEVENV_STATE='/root/prj/td/.devenv/state'\n\n\nexport PS1=\"\\[\\e[0;34m\\](devenv)\\[\\e[0m\\] ${PS1-}\"\n\n# set path to locales on non-NixOS Linux hosts\nif [ -z \"${LOCALE_ARCHIVE-}\" ]; then\n  export LOCALE_ARCHIVE=/nix/store/shxwsb8w1xjdj5d1clmmkms4vpdhs5ay-glibc-locales-2.38-23/lib/locale/locale-archive\nfi\n\n\n# note what environments are active, but make sure we don't repeat them\nif [[ ! \"${DIRENV_ACTIVE-}\" =~ (^|:)\"$PWD\"(:|$) ]]; then\n  export DIRENV_ACTIVE=\"$PWD:${DIRENV_ACTIVE-}\"\nfi\n\n# devenv helper\nif [ ! type -p direnv &>/dev/null && -f .envrc ]; then\n  echo \"You have .envrc but direnv command is not installed.\"\n  echo \"Please install direnv: https://direnv.net/docs/installation.html\"\nfi\n\nmkdir -p .devenv\nrm -f .devenv/profile\nln -s /nix/store/w85iqiki8r7pm96n9wfpm2kzni9binb7-devenv-profile .devenv/profile\n\n"},
    "stdenv": {"type": "exported", "value": "/nix/store/8cp9qncgk7a8kpdc9ama9j66zxiqs9cz-naked-stdenv"},
    "system": {"type": "exported", "value": "x86_64-linux"}
  }
}